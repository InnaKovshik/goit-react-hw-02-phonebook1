{"version":3,"sources":["components/ContactList/ContactList.module.scss","App.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INIITAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","resetForm","onCheckUnique","alert","this","className","s","form","onSubmit","inputForm","type","placeholder","onChange","formBtn","Component","ContactListItem","onRemove","deleteNameBtn","onClick","ContactsList","contacts","length","contactList","map","contact","Filter","filter","prototype","PropType","string","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b9c7ee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2l9e6\",\"deleteNameBtn\":\"ContactList_deleteNameBtn__3xBXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"App_form__2E05R\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.scss';\r\n\r\nconst INIITAL_STATE = {\r\n  name: '',\r\n  phone: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INIITAL_STATE;\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidateForm = this.validateForm();\r\n\r\n    if (!isValidateForm) return;\r\n\r\n    onAdd({ id: uuidv4(), name, phone });\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, phone } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n\r\n    if (!name || !phone) {\r\n      alert('Some filed is empty');\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => this.setState(INIITAL_STATE);\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\r\n        <h3>Name</h3>\r\n        <input\r\n          className={s.inputForm}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <h3>Number</h3>\r\n        <input\r\n          className={s.inputForm}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Enter phone number\"\r\n          value={phone}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <button className={s.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from './ContactList.module.scss';\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n  return (\r\n    <li>\r\n      {name}: {phone}\r\n      <button className={s.deleteNameBtn} onClick={() => onRemove(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropType from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={({ target }) => onChange(target.value)}\r\n        placeholder=\"Enter name for Search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.prototype = {\r\n  filter: PropType.string,\r\n  target: PropType.string,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nimport s from './App.module.scss';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.form}>\n        <h1>Form Contact</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}